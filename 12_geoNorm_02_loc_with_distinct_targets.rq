#+ summary: Get distinct locations, with indication of what they qualify. 
#+ endpoint: http://128.178.60.47:8890/sparql
#+ method: GET
#+ tags:
#+   - location normalisation

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX core: <http://vocab.dhlab.epfl.ch/data-core#>
PREFIX common: <http://vocab.dhlab.epfl.ch/data-common#>
PREFIX grz-owl: <http://vocab.dhlab.epfl.ch/garzoni#>
PREFIX meta: <http://vocab.dhlab.epfl.ch/archive-metadata#>
PREFIX edm: <http://www.europeana.eu/schemas/edm/>
PREFIX dhc: <http://vocab.dhlab.epfl.ch/dhcanvas#>
PREFIX foaf: <http://xmlns.com/foaf/0.1>
PREFIX iiif: <http://iiif.io/api/presentation/2#>
PREFIX bif: <http://www.openlinksw.com/schemas/bif#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX sem: <http://semanticweb.cs.vu.nl/2009/11/sem/> 

SELECT distinct ?qualified ?trans ?standard ?labelParish ?sestiere
WHERE 
{
  ?pl a common:PlaceMention . 
  {?pl ^grz-owl:hasLocation ?x .} UNION {?pl ^grz-owl:hasGeographicalOrigin ?y .}  UNION {?pl ^grz-owl:hasResidence ?z .}
  OPTIONAL { ?pl common:transcript ?trans }
  OPTIONAL { ?pl common:standardForm ?standard }
  OPTIONAL { ?pl common:inParish ?parish. ?parish rdfs:label ?labelParish; common:inSestiere ?s . ?s rdfs:label ?sestiere .}
  BIND(xsd:string(IF(bound(?x), "workshopLoc", "geoOrigins")) AS ?temp) .
  BIND(xsd:string(IF(bound(?z), "residence", "")) AS ?temp2) .
  BIND(xsd:string(IF(?temp2 = "", ?temp, ?temp2)) AS ?qualified) .
} 
GROUP BY ?qualified ?trans ?standard ?labelParish ?sestiere
