#+ summary: Give me the profession transcripts of Master and Apprentices when different (still duplicates, for unique across master and app profd, should do a uniq on the results) 
#+ endpoint: http://128.178.60.47:8890/sparql
#+ method: GET
#+ tags:
#+   - profession normalisation 

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX core: <http://vocab.dhlab.epfl.ch/data-core#>
PREFIX common: <http://vocab.dhlab.epfl.ch/data-common#>
PREFIX grz-owl: <http://vocab.dhlab.epfl.ch/garzoni#>
PREFIX meta: <http://vocab.dhlab.epfl.ch/archive-metadata#>
PREFIX edm: <http://www.europeana.eu/schemas/edm/>
PREFIX dhc: <http://vocab.dhlab.epfl.ch/dhcanvas#>
PREFIX foaf: <http://xmlns.com/foaf/0.1>
PREFIX iiif: <http://iiif.io/api/presentation/2#>
PREFIX bif: <http://www.openlinksw.com/schemas/bif#>
PREFIX sem: <http://semanticweb.cs.vu.nl/2009/11/sem/> 

SELECT ?year (?trm AS ?transcriptMaster) (?tra AS ?transcriptApprentice)
WHERE
{
	 ?master a common:PersonMention; grz-owl:hasRole grz-owl:Master ; grz-owl:hasProfession ?profMaster ; core:isMentionedIn ?contract  . 
	 ?app a common:PersonMention; grz-owl:hasRole grz-owl:Apprentice ; grz-owl:hasProfession ?profApp ; core:isMentionedIn ?contract.  
	 ?contract a grz-owl:Contract ; sem:hasTimeStamp ?date .
	 BIND (year(?date) AS ?year)
	 ?profMaster common:transcript ?TRMaster .
	 ?profApp common:transcript ?TRApp .
	 BIND (lcase(str(?TRMaster)) AS ?trm )
	 BIND (lcase(str(?TRApp)) AS ?tra )
	 FILTER (?trm != ?tra)
}
GROUP BY (?year)
ORDER BY ASC(?year)
